$forall Entity res_id res <- resources
  <div .res-li>

    <div .res-fav-grok-container>
      <div .res-fav .res-link :S.member res_id favs:.fav ##{toPathPiece res_id} title="Favorite">
      <div .res-num-fav>#{M.findWithDefault 0 res_id num_favs}
      <div .res-grok .res-link :S.member res_id grokked:.grok ##{toPathPiece res_id} title="Grok">
      <div .res-num-grok>#{M.findWithDefault 0 res_id num_grokked}

    <a .res-info .res-link href=@{ResourceR res_id}>

    <a .res-url .res-link href=#{resourceUrl res}>
      <div .res-title>#{resourceTitle res}
        $maybe ext <- resourceExtension res
          <span .res-ext .res-ext-#{ext}> (#{ext})

      <div .res-published-type-authors>
        $maybe published <- resourcePublished res
          <span .res-published>#{show published}
        <span .res-type>#{shortDescResourceType $ resourceType res}
        $maybe authors <- map authorName <$> M.lookup res_id authorsMap
            <span .res-authors-by> by
            <span .res-authors> #{T.intercalate ", " $ authors}
