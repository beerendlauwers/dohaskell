<p>
  Officially,
  <strong>dohaskell
  is a tagged Haskell learning resources index.  Unofficially, it's a glorified bookmarks folder.
  Submit links to your favorite blog posts, research papers, and video lectures - then tag
  them for others to discover!

  <em .small>
    Pro tip: poke around the
    <a href=@{FeedsR}>feeds
    \ page and discover a way to quickly determine which links from your favorite Haskelly RSS 
    feed have already made it on the site.

<p>
  dohaskell was built for and is maintained by the Haskell community. Resource metadata is managed
  by the original submitter, so any modifications you'd like to make to an existing resource
  (e.g. add or delete a tag) must be approved by that person. This is simply to help prevent people from
  intentionally adding bogus tags, deleting data, etc. Of course, nothing is stopping you from
  submitting and maintaining your own bogus links ;).

$maybe uid <- muid
  <p>
    You can see your list of requested edits
    <a href=@{ReqEditsHubR uid}>here#
    , accessed through your
    <a href=@{UserR uid}>profile#
    .

<p>
  If you'd like to submit a resource but don't want to be responsible for responding to any edit
  requests, that's fine &mdash; I can approve or deny edits on your behalf. Eventually I may implement a
  "relinquish ownership" feature, although I don't anticipate any huge problems with the current system.
  Resource edit requests will generally be tweaking tag names to better match existing tags, or fixing typos
  in resource titles.

<p>
  dohaskell is open-source, written entirely in Haskell using the
  <a href="http://www.yesodweb.com">Yesod
  web framework. If you dig it, please
  <a href="https://github.com/mitchellwrosen/dohaskell">contribute</a>!

<hr>

<p>
  dohaskell is most useful with minimal noise. So, try to conform to existing tags, including capitalization
  and plurality. Tags are case-sensitive by design: consider <em>functor</em> vs. <em>Functor</em>, or
  <em>GHC</em> (a blog post about internals) vs. <em>ghc</em> (an index of useful command-line flags).

<p>
  Meta-resources, such as
  <a href="https://github.com/grsmv/haskell-bookmarks">this#
  , are better submitted one
  link at a time. Obviously, depending on the size, this may be an inordinate amount of work. Feel free to
  submit the meta-resource itself, using a tag like <em>miscellaneous</em>, but avoid tagging it with each
  tag of its constituents - it will quickly become noise.

<p>
  Online courses are similarly difficult to tag. Perhaps they should all be tagged with <em>online course</em>
  and nothing more, as again, tagging with each constituent component is noisy.

<p>
  This is not to say that single, pointed resources should be conservative in their tags. Actually, the more
  tags, the better, as long as each tag is appropriate. Consider the <em>monad</em> tag: although a huge number
  of resources may <em>use</em> monads, only some percentage of them are <em>about</em> monads in some way. Use 
  your best judgement.

<p>
  Thanks for making it this far, and happy Haskelling!

<hr>
