-- A user. Users have unique names (email addresses), which are not publicly
-- visible. Users may change their public name at any time, and there is no
-- uniqueness constraint.
User
    name            Text -- User "name" (credentials used to log in, i.e. an email addr).
    displayName     Text -- Defaults to "anonymous". Not unique.
    isAdministrator Bool
    created         UTCTime default=CURRENT_TIMESTAMP
    UniqueUserName name
    deriving Typeable

-- A list of resources, whose database entry is shared by all users who happen 
-- to have made a list of that name. There is one built-in list ("grokked") that 
-- users can easily add items to. All other lists (e.g. "to read" or 
-- "favorites") are created on the fly by adding one resource to them.
List
    name Text
    UniqueList name

-- A single Resource in a User's List.
ListItem
    userId    UserId
    listId    ListId
    resId     ResourceId
    timestamp UTCTime
    UniqueListItem userId listId resId

Resource
    title     Text
    url       Text
    published Int Maybe
    type      ResourceType
    userId    UserId
    posted    UTCTime
    UniqueResourceUrl url
    deriving Eq Ord

Tag
    name Text
    UniqueTag name
    deriving Eq Ord

-- A Resource can have one or more Tags.
-- TODO: rename ResTag
ResourceTag
    resId ResourceId
    tagId TagId
    UniqueResourceTag resId tagId

Collection
    name Text
    UniqueCollection name

-- A Resource can belong to zero or more Collections.
ResCollection
    resId ResourceId
    colId CollectionId
    UniqueResCollection resId colId

Author
    name Text
    UniqueAuthor name
    deriving Eq Ord

-- A Resource can have zero or more Authors, order matters.
ResAuthor
    resId  ResourceId
    authId AuthorId
    ord    Int        -- starts at 0
    UniqueResAuthor resId authId

-- A question/answer pair, for a Resource.
-- QuestionAnswer
--     quesText Markdown
--     answText Markdown
--     resId    ResourceId

-- Caveat: can't have a uniqueness constraint on a NULLABLE field. This means
-- there may be two pending edits for the same published year change. Oh well.
EditPublished
    resId     ResourceId
    published Int Maybe

EditTitle
    resId ResourceId
    title Text
    UniqueEditTitle resId title

EditType
    resId ResourceId
    type  ResourceType
    UniqueEditType resId type

EditAddTag
    resId ResourceId
    text  Text
    UniqueEditAddTag resId text

EditRemoveTag
    resId ResourceId
    text  Text
    UniqueEditRemoveTag resId text

EditAddCollection
    resId ResourceId
    name  Text
    UniqueEditAddCollection resId name

EditRemoveCollection
    resId ResourceId
    name  Text
    UniqueEditRemoveCollection resId name

-- An EditAuthors is essentially a new list of authors, to be shown to the resource
-- owner as one big blob (he/she will have to figure out what's changed).
--
-- Editing authors is treated a little differently than editing tags for two reasons:
--
-- 1. Editing authors will be much less frequent, and there will be fewer authors
--    than tags, so it's not as necessary to see individual add/remove author
--    requests.
--
-- 2. Author order matters, so inundating the resource maintainer with a bunch of
--    ordering-related edits will cause more confusion than just displaying the list
--    of authors raw and letting them figure it out.
--
--    Consider changing "foo, bar, baz" to "bar, baz". If we had separate EditAddAuthor,
--    EditRemoveAuthor, and EditChangeAuthorOrdinal requests, this would mandate the
--    acceptance/denial of three separate edits: remove foo, change bar ordinal from
--    2 to 1, and change baz ordinal from 3 to 2.
EditAuthors
    resId  ResourceId
    authors [Text]
    UniqueEditAuthors resId authors

Comment
    resId     ResourceId
    parentId  CommentId  Maybe
    userId    UserId
    body      Markdown
    timestamp UTCTime

Feed
    type         FeedType
    title        Text
    url          Text
    lastModified ByteString
    etag         ByteString
    contents     ByteString
    UniqueFeed   url
